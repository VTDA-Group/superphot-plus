{"project": "superphot-plus", "project_url": "https://github.com/lincc-frameworks/superphot-plus", "show_commit_url": "https://github.com/lincc-frameworks/superphot-plus/commit/", "hash_length": 8, "revision_to_hash": {"0": "0283df97a0da2b5a4c259deb425f3cd4137376b3", "1": "e9d8adc2ac270f737246f08055942f42cb8cfb9d", "2": "507dc7da3cb50b7be53a4b4ac7f188d39c3faf9b", "3": "c3d14e78867d3beb953b6b26cb53014ec2980262", "4": "9f6c229e048a51107704bb8772540e8246e87ea1", "5": "0221ae5b7d0d506bd50ebb6fec5ec6dd3ca1dff9", "6": "a97a1a189a5ee8439a88c5e7cf9d1877e568d49d", "15": "be417a3686a350424b382a0bef10d14245136dac", "25": "e0d5ded469103374865838d14d91e6ae1b7b6425", "29": "22e320f1bc42d73e5d90b7d27b25fd7d10b23137", "33": "9c72f70e206aa336a9b1d1c9b0c817fb142328b9", "35": "7c33ebdcd3708d084dc18d443cdbb29ac28f141c", "37": "3808893cbbd1bf5ed282dd9ff6dc914d81188e7c", "41": "c8a1a959a05d5ef884e1ed6d6a12dcef9173b795", "48": "08417db3a4de6caa492433326c8add844caa686f", "49": "9e9168fb6bcf479ff648e873bf21f909a792d6e3", "50": "a2e825f9713fbb1cfad0448ea88288cfb488828e", "56": "8c0f53c78dfd1a962e18d1e0e03af4bf4ebb439a", "57": "8573f06257d33d4897c962657ba9c08732392f6b", "65": "4638bfcfca1b52180574b3067d038abc52547d7e", "71": "d3751692d0beb124c0a20822437b626c3a425f0b", "81": "42d00b0e4f947c984ea8570d004155a7941281d9", "87": "1924bbc170965b2f4908e039f8b3882da55814dc", "101": "5b928b8fe42248fdd575b896570d9f09d44b36ee", "113": "5a87f84f0f586d7ba171c636af0109190a670ee8", "115": "9faf6a5133b052bc09b1038c371ddce4e387a707", "119": "5017d1d393ea0155e4d2ca8fcb4734204e51d269", "121": "77b8543bd9c7dfaa2a9f3817d17bb7d2da212353", "127": "5d6344d2a88b630946e0c2941a96c515d64fbd70", "133": "18298dbc67b31277610f9e93e2f89d869a2cfdff", "137": "b44496b6d6571498a8de83ed20233630faf694fa", "147": "f1ea7d91b128cc8875a2815c7c12d32dba101dba", "151": "a7d4cb382c55619d498dd4a866d021aa232f521c", "152": "d6a1212efbd67d99ebb397891af3463d48bae01b", "156": "338396d930b352a80f769c61e3d0a62ce3214c1e", "163": "118389e0cde8993797ae852ba18bd50221223bf5", "164": "4b750b7cd5fa9b8a17778b5ab494f56bf04785aa", "173": "9097f447beb82dd427acdd42593df033a2c50db7", "185": "23ac274e8729bf035226ab54f8187006c7cb0a4a", "187": "0947f17c965af4f358859471fae3e7e25833df09", "191": "e3da2c54e0c8b2e4e95c2ff778a84e9c541d2e34", "223": "b6a2531d8fbd90a840eb0ec738f42a54033df22e", "229": "2dd18bb3f090dbc4fb7af27b4b34d11016f5d535", "230": "04f90e668b40a5eb69ca908f024fc9247fc615c7", "233": "1f5506e505f595b952e10705c5d08145597fecca", "234": "89aab5611f4e6cc23384d3e22891aada50757558", "235": "4712e71e68f316c8b61306e6a9d65e5cdd89f201", "238": "cd709a624b3e3e850dfe58eab9c75daf2fbb1889", "240": "d090757c1c48a4153f0d4852c43c6d552c6e2481", "247": "9f06083129930f84a1facceeb8af926521b2e349", "248": "39177471e74d008a9f3d0661dad3466080f25312", "249": "06f6055c22e9753e6adff06c4e0940d47887670e", "251": "fa8786ba67a0e23074cc491f3e55e60235d71078", "255": "e1f63e5a17a98fadb422b4ac3a510730cde95f93", "258": "09a6060f390a2cc53bdc2644643e4bff833b0d9b", "261": "37efb5ef321fd2dfb216a1a3a8bfad3bd1db0a59", "264": "822308f3abe809e43883fffcc1988bdeb2be22e1", "275": "b8371c8d70a7dd2a8ae3720f87ec2c940522ed74", "284": "368e32aca4a85687b83ced64ebf60d36d332e786", "293": "55ef1525ba0cd1ec90b90199d801ff0432bf3f1b", "294": "578e80c3eb7a765f4d9e5268125e7fefa5f9c323", "296": "e4744adf7973170ac2ba929b4e3d03a66066989f", "301": "a4927b40731e1f33e6ef6bbdc27ac63c98e56b90", "312": "7cfdeb80ef06123788a9da88e199d26136994bee", "318": "6f243d24958995d72ffbf106eb79d578baac9caa", "337": "f992577ae5d1c5fb833a90554d400a8693586d70", "340": "2765a737759f61f07452a06491e5936cdfca95c6", "343": "d8c8b8e44cb687fc82af8eedd1b5a6573047887a", "348": "61c74fe77dc140e69c4bc25ccd56b22ac62100a1", "352": "c9ac86324247c9e9d8e97bce6b517bfe9cb1bc38", "355": "fa05c94b4577bb70386b5d82abac15c7d077f62b", "366": "805b2dd4b0fbd8566c2d585b11cc7c058552b4b9", "372": "4abbd6a510dab6534282d10a3381b6a62c92f8e5", "394": "3dcb81c7a0719dd92024c024cc8f2126f487ced6", "400": "45c24d322ff2b10989c600f314487c5c9c136349", "408": "0031a27ff37f2c9b599952bc252cd28a589aee3a", "417": "bf1a30f61c068e85e3ee6ea6d0855436a4faf9b7", "421": "56938a3708f5bcfcb5ebf9a400c29d285632fa48", "423": "68232594ad0598cb82a3713db7e2cd76acb7a4b1", "429": "c362a641d03045964f52f2ed53730f1a5111c2b0", "434": "2d679a6f259c66b67a1af5cfb68c4f9d972aab8c", "436": "d52bc52bf80cf8e7f8ee50d2246d94164823cf3d", "441": "7c4d75e67148e8c86f6e603c1cdc2c7bd6e865b4", "444": "75852aa7e7adb1928741370b6b64157033f7dfc4", "452": "0360fdc046fd270e8f4c6dcb7a61b461b511195f", "455": "23eeba57f3fd1b02d49a245d20e96eb171ba1acf", "458": "576eb56ba5d211f42ccb9a82ba81c740c94d9732", "467": "09703ed34d0dc29cac06bb4663b2c04d66de7fb7", "495": "9cfdadab330af9018c3d6c942832b3364d3884bc", "503": "f8a3c988aeda2dc7d5fd01bdbc55cf8a80c03060", "504": "2ac47eb7f4632e4f04a032d202cdd03511d69b39", "513": "535565d98ecd65ca58ad80fb3f33c3e660be3d05", "522": "714f370c8c3ff645be96e892cee27ab95241ee17", "530": "44832f0e975f71942e7ce71a6103f887c886a79f", "564": "c88c6e024a08c68793b903d9e5fb7cf0d49224c1", "571": "5516b993682a3a369883d70de622f5d86e92f80f", "593": "1d85c57cf95b61b441a00edd0a654748f5853673", "595": "06eaf129811354749643acfa5785921ccfea9dd3", "605": "a83c47ca15d13c5685043a7c5e171e2f8f9d5f83", "606": "aeb2172bbf285dadccdddef00a647b2312583d50", "617": "316023ba4002ca5e2eff03a7d41a315d355fc501", "623": "de67f5d0aeb6e51772d990335378b100a1b30999", "625": "a9aa7d2216e0c4affc11859f35247bb8784e386c"}, "revision_to_date": {"0": 1686341518000, "1": 1686365201000, "2": 1688045949000, "3": 1688046086000, "4": 1688156313000, "5": 1688394487000, "6": 1688394704000, "15": 1688568713000, "25": 1689087596000, "29": 1689168433000, "33": 1689169719000, "35": 1689174875000, "37": 1689187010000, "41": 1689258786000, "48": 1689274121000, "49": 1689274576000, "50": 1689274689000, "56": 1689281582000, "57": 1689281610000, "65": 1689364754000, "71": 1689601750000, "81": 1689658137000, "87": 1689696099000, "101": 1689773353000, "113": 1689797273000, "115": 1689805767000, "119": 1689861268000, "121": 1689861616000, "127": 1689866024000, "133": 1689879092000, "137": 1689946123000, "147": 1689966676000, "151": 1689969228000, "152": 1689970106000, "156": 1690205379000, "163": 1690224233000, "164": 1690224343000, "173": 1690244044000, "185": 1690300732000, "187": 1690301369000, "191": 1690306073000, "223": 1690489135000, "229": 1690546502000, "230": 1690546520000, "233": 1690564664000, "234": 1690566451000, "235": 1690566621000, "238": 1690568046000, "240": 1690815978000, "247": 1690833132000, "248": 1690833197000, "249": 1690833385000, "251": 1690895905000, "255": 1690902892000, "258": 1690906047000, "261": 1690912452000, "264": 1690927606000, "275": 1690997725000, "284": 1691067879000, "293": 1691071056000, "294": 1691073444000, "296": 1691074347000, "301": 1691081797000, "312": 1691086986000, "318": 1691104582000, "337": 1691437988000, "340": 1691438660000, "343": 1691443023000, "348": 1691504992000, "352": 1691511233000, "355": 1691517687000, "366": 1691525975000, "372": 1691600289000, "394": 1691692302000, "400": 1691699435000, "408": 1691777878000, "417": 1692020522000, "421": 1692036162000, "423": 1692107242000, "429": 1692114517000, "434": 1692126161000, "436": 1692155252000, "441": 1692198176000, "444": 1692199861000, "452": 1692295280000, "455": 1692297097000, "458": 1692627435000, "467": 1692710358000, "495": 1693237661000, "503": 1693244709000, "504": 1693246270000, "513": 1693315117000, "522": 1693325724000, "530": 1693333488000, "564": 1693582124000, "571": 1693917905000, "593": 1694009063000, "595": 1694010056000, "605": 1694223019000, "606": 1694223121000, "617": 1694458730000, "623": 1694711817000, "625": 1694799149000}, "params": {"machine": ["gh-runner"], "python": ["3.10"], "Cython": [""], "build": [""], "packaging": [""], "branch": ["HEAD"]}, "graph_param_list": [{"machine": "gh-runner", "python": "3.10", "Cython": "", "build": "", "packaging": "", "branch": "HEAD"}], "benchmarks": {"inference_suite.InferenceSuite.time_dynesty_inference": {"code": "class InferenceSuite:\n    def time_dynesty_inference(self, classifier):\n        \"\"\"Benchmarks the inference task using the dynesty optimizer\"\"\"\n        sampler = DynestySampler()\n        lightcurve = Lightcurve.from_file(SINGLE_ZTF_LIGHTCURVE_COMPRESSED)\n        posteriors = sampler.run_single_curve(lightcurve, priors=Survey.ZTF().priors)\n    \n        with tempfile.TemporaryDirectory() as tmp_dir:\n            posteriors.save_to_file(tmp_dir)\n            classifier.classify_single_light_curve(SINGLE_ZTF_ID, tmp_dir, \"dynesty\")\n\n    def setup_cache(self):\n        \"\"\"Warms up the suite, loading the classifier.\"\"\"\n        return SuperphotClassifier.load(CLASSIFIER_FILE, CLASSIFIER_CONF)[0]", "min_run_count": 2, "name": "inference_suite.InferenceSuite.time_dynesty_inference", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "inference_suite:15", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6ba6aa220be3699fb224c302446626fededb6448c685ac363566cb460657f2fc", "warmup_time": -1}, "inference_suite.InferenceSuite.time_numpyro_nuts_inference": {"code": "class InferenceSuite:\n    def time_numpyro_nuts_inference(self, classifier):\n        \"\"\"Benchmarks the inference task using the NUTS sampler\"\"\"\n        sampler = NumpyroSampler()\n        lightcurve = Lightcurve.from_file(SINGLE_ZTF_LIGHTCURVE_COMPRESSED)\n        posteriors = sampler.run_single_curve(\n            lightcurve, priors=Survey.ZTF().priors, rng_seed=None, sampler=\"NUTS\"\n        )\n        with tempfile.TemporaryDirectory() as tmp_dir:\n            posteriors.save_to_file(tmp_dir)\n            classifier.classify_single_light_curve(SINGLE_ZTF_ID, tmp_dir, \"NUTS\")\n\n    def setup_cache(self):\n        \"\"\"Warms up the suite, loading the classifier.\"\"\"\n        return SuperphotClassifier.load(CLASSIFIER_FILE, CLASSIFIER_CONF)[0]", "min_run_count": 2, "name": "inference_suite.InferenceSuite.time_numpyro_nuts_inference", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "inference_suite:15", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7d2364c2067132a83032b3efba0d30e94319f7f0e4d03cf269b324a640617c23", "warmup_time": -1}, "inference_suite.InferenceSuite.time_numpyro_svi_inference": {"code": "class InferenceSuite:\n    def time_numpyro_svi_inference(self, classifier):\n        \"\"\"Benchmarks the inference task using the svi sampler\"\"\"\n        sampler = NumpyroSampler()\n        lightcurve = Lightcurve.from_file(SINGLE_ZTF_LIGHTCURVE_COMPRESSED)\n        posteriors = sampler.run_single_curve(\n            lightcurve, priors=Survey.ZTF().priors, rng_seed=None, sampler=\"svi\"\n        )\n        with tempfile.TemporaryDirectory() as tmp_dir:\n            posteriors.save_to_file(tmp_dir)\n            classifier.classify_single_light_curve(SINGLE_ZTF_ID, tmp_dir, \"svi\")\n\n    def setup_cache(self):\n        \"\"\"Warms up the suite, loading the classifier.\"\"\"\n        return SuperphotClassifier.load(CLASSIFIER_FILE, CLASSIFIER_CONF)[0]", "min_run_count": 2, "name": "inference_suite.InferenceSuite.time_numpyro_svi_inference", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "inference_suite:15", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "323caf7d7ce9737ae1c2285ed7d83d8ac0c04efe5cec382ef816be1256f1a66d", "warmup_time": -1}, "sampling_suite.SamplingSuite.time_dynesty_single_file": {"code": "class SamplingSuite:\n    def time_dynesty_single_file(self):\n        \"\"\"Benchmarks the dynesty optimizer with nested sampling\"\"\"\n        sampler = DynestySampler()\n        lightcurve = Lightcurve.from_file(SINGLE_ZTF_LIGHTCURVE_COMPRESSED)\n        posteriors = sampler.run_single_curve(\n            lightcurve, priors=Survey.ZTF().priors, rstate=np.random.default_rng(9876)\n        )\n        with tempfile.TemporaryDirectory() as tmp_dir:\n            posteriors.save_to_file(tmp_dir)", "min_run_count": 2, "name": "sampling_suite.SamplingSuite.time_dynesty_single_file", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9e0557406fefd98c513545632d8953f697d190deb069a440896ca20bf8b7fccd", "warmup_time": -1}, "sampling_suite.SamplingSuite.time_nuts_single_file": {"code": "class SamplingSuite:\n    def time_nuts_single_file(self):\n        \"\"\"Benchmarks the NUTS sampler\"\"\"\n        sampler = NumpyroSampler()\n        lightcurve = Lightcurve.from_file(SINGLE_ZTF_LIGHTCURVE_COMPRESSED)\n        posteriors = sampler.run_single_curve(\n            lightcurve, priors=Survey.ZTF().priors, rng_seed=None, sampler=\"NUTS\"\n        )\n        with tempfile.TemporaryDirectory() as tmp_dir:\n            posteriors.save_to_file(tmp_dir)", "min_run_count": 2, "name": "sampling_suite.SamplingSuite.time_nuts_single_file", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b9236a99295814b5c81f734b47414d87825e6e584e5bef41f724ecaadcce45ab", "warmup_time": -1}, "sampling_suite.SamplingSuite.time_svi_single_file": {"code": "class SamplingSuite:\n    def time_svi_single_file(self):\n        \"\"\"Benchmarks the svi sampler\"\"\"\n        sampler = NumpyroSampler()\n        lightcurve = Lightcurve.from_file(SINGLE_ZTF_LIGHTCURVE_COMPRESSED)\n        posteriors = sampler.run_single_curve(\n            lightcurve, priors=Survey.ZTF().priors, rng_seed=None, sampler=\"svi\"\n        )\n        with tempfile.TemporaryDirectory() as tmp_dir:\n            posteriors.save_to_file(tmp_dir)", "min_run_count": 2, "name": "sampling_suite.SamplingSuite.time_svi_single_file", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9954da6a493f10cd6d698e5103355e2f592891dab3ad9bd45c7899464b9fe295", "warmup_time": -1}}, "machines": {"gh-runner": {"machine": "gh-runner", "version": 1}}, "tags": {"v0.0.1": 133, "v0.0.2": 394}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}